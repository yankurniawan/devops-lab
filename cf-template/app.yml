AWSTemplateFormatVersion: 2010-09-09
Description: Application Stack

Parameters:
  NetworkStackName:
    Type: String
    Description: Network CF Stack name
    Default: demo-network
  WebServerInstanceType:
    Default: t2.micro
    Description: WebServer EC2 instance type
    Type: String
    AllowedValues:
      - t2.micro
      - t2.small
      - m3.medium
      - m4.large
    ConstraintDescription: Must be a valid EC2 instance type
  KeyPair:
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
    Default: yan-demo
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  BaseAMI: 
    Default: ami-43874721
    Description: WebServer base AMI
    Type: String
  OpenVPNAMI:
    Default: ami-7777b515 
    Description: OpenVPN Server AMI
    Type: String
  PublicZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Route53 public zone id
    Default: ZZ862RO6V0BP
  PublicZoneName:
    Type: String
    Description: Route53 public zone name
    Default: yankurniawan.com.
Resources:
  WebServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub ${NetworkStackName}-PrivateSubnet0
      - Fn::ImportValue:
          !Sub ${NetworkStackName}-PrivateSubnet1
      LaunchConfigurationName: !Ref WebServerLC
      MinSize: 2
      MaxSize: 2
      DesiredCapacity: 2
      LoadBalancerNames: 
        - !Ref AppELB
      Tags:
        -
          Key: Name
          Value: !Sub ${AWS::StackName}-WebServer
          PropagateAtLaunch: true
        - 
          Key: class
          Value: webserver
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        PauseTime: PT15M
        WaitOnResourceSignals: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
  WebServerLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      ImageId: !Ref BaseAMI
      InstanceType: !Ref WebServerInstanceType
      KeyName: !Ref KeyPair
      SecurityGroups:
        - Fn::ImportValue:
            !Sub ${NetworkStackName}-AppSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          exec > >(tee /var/log/userdata.log)
          exec 2>&1
          curl --data "host_config_key=f4a5cd29c9fca4cde2a45fadb8dd5777" http://awx.yankurniawan.local:8443/api/v2/job_templates/8/callback/
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServerGroup --region ${AWS::Region}

  AppELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
      - Fn::ImportValue:
          !Sub ${NetworkStackName}-AppELBSecurityGroup
      Subnets:
      - Fn::ImportValue:
          !Sub ${NetworkStackName}-PublicSubnet0
      - Fn::ImportValue:
          !Sub ${NetworkStackName}-PublicSubnet1
      CrossZone: true
      Listeners:
        -
          LoadBalancerPort: 80
          InstancePort: 80
          Protocol: HTTP
        - 
          LoadBalancerPort: 443
          InstancePort: 80
          Protocol: HTTPS
          InstanceProtocol: HTTP
          SSLCertificateId: arn:aws:acm:ap-southeast-2:638735977172:certificate/3ea22ea8-d0c2-4be8-9f16-0c8d58e37880
          PolicyNames:
            - ELBSecurityPolicy-2016-08
      HealthCheck:
        Target: HTTP:80/index.html
        HealthyThreshold: 3
        UnhealthyThreshold: 5
        Interval: 30
        Timeout: 5
  OpenVPNInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref OpenVPNAMI
      InstanceType: t2.micro
      SourceDestCheck: false
      KeyName: !Ref KeyPair
      SubnetId: 
        Fn::ImportValue:
          !Sub ${NetworkStackName}-PublicSubnet0
      SecurityGroupIds: 
        - Fn::ImportValue:
            !Sub ${NetworkStackName}-OpenVPNSecurityGroup
      Tags:
        -
          Key: Name
          Value: !Sub ${AWS::StackName}-OpenVPNServer
  ELBDNSRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Ref PublicZoneName
      Comment: Alias for webserver ELB
      RecordSets:
      - Name: devops.yankurniawan.com.
        Type: A
        AliasTarget:
          HostedZoneId: !GetAtt AppELB.CanonicalHostedZoneNameID
          DNSName: !GetAtt AppELB.DNSName

